# 数据采集与预处理

[TOC]

## 字母表示

| $$N_{res}$$        | 初始输入序列的残基数（训练过程中进行剪裁后的）               |
| :----------------- | ------------------------------------------------------------ |
| **$$N_{templ}$$**  | **模型使用的模板数**                                         |
| $N_{all\_seq}$     | **一个MSA所有可用的序列数**                                  |
| $$N_{clust}$$      | **进行MSA聚类后的MSA簇数（簇中心数目）**                     |
| $$N_{seq}$$        | **MSA处理的序列数**                                          |
| $$N_{extra\_seq}$$ | **额外的MSA中的序列（在进行聚类过程中未被选中为中心的序列，从中选取$$N_{extra\_seq}$$个序列）** |
| $$N_{block}$$      | **Evoformer模块堆叠数**                                      |
| $$N_{ensemble}$$   | **特征集成次数**                                             |
| $$N_{cycle}$$      | **回收机制执行次数**                                         |



## 流程图

![数据预处理流程图](D:\Desktop\AI4S\Alphafold-实习的学习\AF2补充材料分阶段解读\数据预处理流程图.png)

## 数据源

**序列数据格式：**

- 训练模式：$$mmCIF file$$
- 推理模式：$$FASTA file$$

$$mmCIF文件$$：

$$FASTA文件$$：



## 数据预处理

### 源文件解析-Parsing

**步骤功能：**提取源文件中的元数据（meta data）

$$mmCIF文件解析结果$$：

- 序列
- 序列名

$$FASTA文件解析结果$$：

- 序列
- 序列名
- 原子坐标
- 发布日期
- 解析



### 基因搜索-Genetic search

**步骤功能：**获取目标序列的多序列比对MSA（multiple sequence alaiagment）



基因搜索工具：

- $$JackHMMERv3.3$$（搜索深度：5000 for $$MGnify$$ /10000 for $$JackHMMER$$）
- $$HHBlitsv3.0-beta.3$$(搜索深度：unlimted)



基因数据库：

- $$MGnify$$
- $$UniRef90$$
- $$Uniclust30$$
- $$BFD$$

### 模板搜索-Template search

**步骤功能：**根据MSA结果进行模板搜索（template）



处理细节：

- 使用$$HHSearch$$工具搜索PDB70数据库
- 训练过程中，排除掉：①在当前结构发布之后才发布的序列的模板信息②与原始序列高度相似的模板信息③过于段的序列模板



**为下游提供的模板输入：**

- **推理过程：**提供四个模板（根据sum_probs参数进行排序得到的最高的四个）
- **训练过程：**随机选择0-4个模板（防止网络过度依赖模板）



### 过滤-Filtering

**步骤功能：** **在训练过程中**，对原始数据进行一定的过滤，使模型能训练更好

- 输入的$$mmCIF文件$$应当小于九个原子精度
- 长链蛋白质有更高的接受概率，短链蛋白质有更低的接受概率（使得模型更适应预测长链）
- 单个氨基酸占比超过80％的氨基酸链会被过滤
- 蛋白质链被接受的概率与其所属簇的大小呈反比



### MSA块删除-MSA block deletion

**步骤功能：** **在训练过程中**，随机删除MSA的部分连续区域



### MSA聚类-MSA clustering

**步骤功能：**为了减轻模型的计算压力与存储压力，我们将$$MSA$$中的序列数量设置了一定的上限（128条）。同时为了保证$$MSA$$中的每行（单条序列）都对最终结果产生影响（提供一定的信息），我们将对$$MSA$$中的氨基酸链（不同行）进行聚类，128条氨基酸为对应的聚类中心，同时为了体现每个类簇的其他氨基酸链的信息，我们扩展了单行的长度，用以容纳簇信息



聚类流程：

- 随机选择$$N_{clust}$$个序列作为$$MSA$$聚类中心(目标序列通常作为第一个簇中心)
- 生成关于聚类中心簇的掩码（每个位置有15%的概率被包含，被包含的位置按照一定的规则进行替代）
- 剩余的序列（未被选中作为聚类中心的序列）被分配到与其距离最近的簇中（根据**汉明距离**），对于每个簇有其对应的簇特征
- 对于未被选为聚类中心的序列，从其中抽取$$N_{extra\_seq}$$个序列作为$$extra\_seq$$





### 残基剪裁-Residue cropping

**步骤功能：** **在训练过程中**,所有数据在残基维度被进行了一定的剪裁，剪裁到大小为$$N_{res}$$



### 训练数据集-training data

总体的训练数据集是通过自蒸馏方式得到的子蒸馏数据占总数据的四分之三。

## 数据特征化

下面有六个主要的特征：

- **1-2：**目标氨基酸链特征（氨基酸特征+位置编码）
- **3-4：**MSA特征（聚类MSA特征+非聚类MSA特征）
- **5-6：**模板特征（残基距离特征+模板角度特征）

| $$target\_feat$$          | 输入氨基酸序列的特征编码[$$N_{res}$$,21]（第一维度：氨基酸维度  第二维度：单个氨基酸的one-hot编码） |
| ------------------------- | ------------------------------------------------------------ |
| $$residue\_index$$        | **输入氨基酸序列的残基索引[$$N_{res}$$]（第一维度：氨基酸维度）** |
| $$msa\_feat$$             | **进行聚类后的MSA特征[$$N_{clust},N_{res},49$$] (第一维度：MSA聚类中心个数 第二维度：进行残基剪裁后的MSA表示中的残基个数 第三维度：包含了对应位置氨基酸的one-hot编码，cluster_has_deletion，cluster_deletion_value，cluster_deletion_mean，cluster_profile)** |
| $$extra\_msa\_feat$$      | **未被选为MSA聚类中心的MSA剩余序列特征[$$N_{extra\_msa},N_{res},25$$]（第一维度：未被选中的MSA序列个数 第二维度：进行残基剪裁后的MSA表示中的残基个数 第三维度：包含了对应位置氨基酸的one-hot比那吗，extra_msa_has_deletion，extra_msa_deletion_value）** |
| $$template\_pair\_feat$$  | **模板氨基酸两两关系特征[$$N_{templ},N_{res},N_{res},88$$]（第一维度：模板个数0-4 第二维度：剪裁后的残基个数 第三维度：剪裁后的残基个数 第三维度：3包含了表示对应残基α碳原子之间距离的one-hot编码（39维），α碳原子偏移表示（3维），两个氨基酸分别的one-hot编码（44维），两个关于序列信息的掩码（2维））** |
| $$template\_angle\_feat$$ | **模板氨基酸链角度特征[$$N_{templ},N_{res},51$$]（第一维度：模板个数0-4 第二维度：剪裁后的残基个数 第三维度：包含了对应的氨基酸的one-hot编码，氨基酸的各种角度信息编码）** |

